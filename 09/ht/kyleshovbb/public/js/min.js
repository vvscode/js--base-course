!function e(t,n,i){function a(s,o){if(!n[s]){if(!t[s]){var c="function"==typeof require&&require;if(!o&&c)return c(s,!0);if(r)return r(s,!0);var u=new Error("Cannot find module '"+s+"'");throw u.code="MODULE_NOT_FOUND",u}var h=n[s]={exports:{}};t[s][0].call(h.exports,function(e){var n=t[s][1][e];return a(n||e)},h,h.exports,e,t,n,i)}return n[s].exports}for(var r="function"==typeof require&&require,s=0;s<i.length;s++)a(i[s]);return a}({1:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.default=function(){if(!document.querySelector("#aboutDiv")){var e=document.createElement("div");e.setAttribute("id","aboutDiv"),document.body.appendChild(e)}aboutDiv.innerHTML="<p>Аркдная игра была создана Кулешовым Владимиром Владимировичем</p>\n<p><a href='https://vk.com/vvkuleshov' target='_blank'>ВКонтакте</a></p>\n<p><a href='https://www.linkedin.com/in/vladimir-kuleshov-27325712a/' target='_blank'>LinkedIn</a></p>\n<p>Игра была создана по ТЗ описанному тут: <a href='https://github.com/vvscode/js--base-course/tree/master/09/ht' target='_blank'>ТЗ для игры</a></p>"}},{}],2:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),r=e("./person"),s=(i=r,i&&i.__esModule?i:{default:i});var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.contain=t,this.arcadeGameContainer=document.createElement("canvas"),this.arcadeGameContainer.setAttribute("id","game"),this.arcadeGameContainer.height=document.documentElement.clientHeight,this.arcadeGameContainer.width=document.documentElement.clientWidth,this.playingGame=!0,this.gameStage=1,n?this.getCurrentPersonageArray(n):(this.human=new s.default("human"),this.timeToStart=new Date,this.personage=[this.human],this.historyStage=[],this.exportCharacterData(),this.startTimer(),this.updateArea()),this.createCanvasArea()}return a(e,[{key:"getCurrentPersonageArray",value:function(e){this.personage=e[this.gameStage-1]}},{key:"createCanvasArea",value:function(){var e=this.arcadeGameContainer.getContext("2d");e.clearRect(0,0,this.arcadeGameContainer.width,this.arcadeGameContainer.height),this.drawGameBoard(e);for(var t=this.personage.length,n=0;n<t;++n)this.drawPersonage(e,this.personage[n]);this.contain.appendChild(this.arcadeGameContainer)}},{key:"drawGameBoard",value:function(e){var t=e;t.beginPath();var n=document.querySelector("#background");t.drawImage(n,0,0,this.arcadeGameContainer.width,this.arcadeGameContainer.height)}},{key:"drawPersonage",value:function(e,t){var n=t.x,i=t.y,a=0,r=0;t.sx>=0?a=t.sx:t.updateSprites.sx>=0&&(a=t.updateSprites.sx),t.sy>=0?r=t.sy:t.updateSprites.sy>=0&&(r=t.updateSprites.sy);var s=void 0,o=void 0,c=void 0,u=t.SUBJECT_SIZE||this.arcadeGameContainer.height/15;switch(t.type||t.t){case"human":e.beginPath(),s=63.5,o=68.5,c=document.querySelector("#person-img"),e.drawImage(c,a,r,s,o,n,i,u,u);break;case"hunt1":e.beginPath(),s=45.7,o=47.75,c=document.querySelector("#hunter1-img"),e.drawImage(c,a,r,s,o,n,i,u,u);break;case"hunt2":e.beginPath(),s=142.33,o=95.75,c=document.querySelector("#hunter2-img"),u=t.SUBJECT_SIZE||this.arcadeGameContainer.height/12,e.drawImage(c,a,r,s,o,n,i,u,u),e.arc(n+u/2,i+u/2,2.5*u,0,2*Math.PI),e.stroke();break;case"mushroom":e.beginPath(),s=50,o=50,c=document.querySelector("#tinyshroommen-img"),e.drawImage(c,a,r,s,o,n,i,u,u)}}},{key:"startTimer",value:function(){var e=this,t=setInterval(function(){e.playingGame?(e.addNewHunter(),++e.gameStage):e.human.humanLife||clearInterval(t)},5e3)}},{key:"createCharacterDataForExport",value:function(){var e=[];return this.personage.forEach(function(t){var n={x:t.x,y:t.y,sx:t.updateSprites.sx,sy:t.updateSprites.sy,t:t.type,d:t.direction};e.push(n)}),e}},{key:"addNewHunter",value:function(){this.gameStage%5==0?this.personage.push(new s.default("hunt2",this.human)):this.personage.push(new s.default("hunt1",this.human)),this.gameStage%10==0&&this.personage.push(new s.default("mushroom",this.human))}},{key:"updateArea",value:function(){var e=this,t=setInterval(function(){e.human.humanLife?(e.removeDeadCharacters(),e.createCanvasArea(),e.checkMushroomTimer()):e.human.humanLife||(clearInterval(t),e.gameOver())},50)}},{key:"exportCharacterData",value:function(){var e=this,t=setInterval(function(){e.historyStage.push(e.createCharacterDataForExport()),e.human.humanLife||clearInterval(t)},200)}},{key:"removeDeadCharacters",value:function(){this.personage=this.personage.filter(function(e){return!1===e.die})}},{key:"checkMushroomTimer",value:function(){if(this.human.mushroomTimer>0){var e=document.querySelector("#mushroomTimer");e||((e=document.createElement("p")).setAttribute("id","mushroomTimer"),document.body.appendChild(e)),e.innerHTML="Время действия волшебного гриба: "+this.human.mushroomTimer+" секунд"}else{var t=document.querySelector("#mushroomTimer");t&&t.remove()}}},{key:"gameOver",value:function(){var e=new Date-this.timeToStart,t=new Date(e),n=t.getMinutes(),i=t.getSeconds();this.playingGame=!1,setTimeout(this.writeFiniteTime(n,i),100)}},{key:"writeFiniteTime",value:function(e,t){var n=prompt("Конец игры. Введите Ваш ник","User")||"User",i=[n,e,t,this.historyStage];if(localStorage.players){var a=JSON.parse(localStorage.players);a.push(i),localStorage.players=JSON.stringify(a)}else{localStorage.players="";var r=[i];localStorage.players=JSON.stringify(r)}window.location.hash="theEnd"+n+";"+e+":"+t}}]),e}();n.default=o},{"./person":4}],3:[function(e,t,n){"use strict";var i=c(e("../utilities/router")),a=c(e("./aboutPage")),r=c(e("./gameArea")),s=c(e("./records")),o=c(e("./recordPlayback"));function c(e){return e&&e.__esModule?e:{default:e}}window.onload=function(){new i.default({routes:[{name:"index",match:"",onEnter:function(){document.querySelector(".mobileControls").style.display="none"}},{name:"Game",match:/Game/,onEnter:function(){var e=document.querySelector("#main_text"),t=document.querySelector("nav");e.style.display="none",t.style.display="none";document.querySelector("#contain").style.display="block";var n=document.querySelector("#contain");new r.default(n)},onLeave:function(){document.querySelector("#contain").style.display="none"}},{name:"GameOver",match:/theEnd(.+)/,onBeforeEnter:function(){document.querySelector(".mobileControls").style.display="none";document.querySelector("#main_text").style.display="none"},onEnter:function(e){var t=e.split(";"),n=document.createElement("h2");n.setAttribute("id","finalTime"),n.innerHTML=t[0]+", Ваше время игры: "+t[1],document.body.appendChild(n);document.querySelector("nav").style.display="block"},onLeave:function(){document.querySelector("#finalTime").style.display="none"}},{name:"Records",match:/Records/,onBeforeEnter:function(){document.querySelector(".mobileControls").style.display="none";document.querySelector("#main_text").style.display="none"},onEnter:function(){new s.default},onLeave:function(){document.querySelector("#tableContain").innerHTML=""}},{name:"playbackUser",match:/playbackUser=(.+)/,onBeforeEnter:function(){document.querySelector(".mobileControls").style.display="none";document.querySelector("#main_text").style.display="none"},onEnter:function(e){new o.default(e)},onLeave:function(){var e=document.querySelector("#controlsDiv");document.querySelector("#paybackGame").style.display="none",e.remove()}},{name:"Author",match:/Author/,onBeforeEnter:function(){document.querySelector(".mobileControls").style.display="none";document.querySelector("#main_text").style.display="none"},onEnter:function(){var e=document.querySelector("#aboutDiv");e?e.style.display="block":(0,a.default)()},onLeave:function(){document.querySelector("#aboutDiv").style.display="none"}}]})}},{"../utilities/router":9,"./aboutPage":1,"./gameArea":2,"./recordPlayback":5,"./records":6}],4:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),a=s(e("../utilities/eventBus")),r=s(e("./updatePersonageSprites"));function s(e){return e&&e.__esModule?e:{default:e}}var o=function(){function e(t,n,i,r,s){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.prey=n,this.containerWidth=document.documentElement.clientWidth,this.containerHeight=document.documentElement.clientHeight,this.SUBJECT_SIZE=this.containerHeight/15,this.x=i||Math.round(this.containerWidth/2-this.SUBJECT_SIZE/2),this.y=r||Math.round(this.containerHeight/2-this.SUBJECT_SIZE/2),this.speed=5,this.type=t,this.direction=s,this.currentDirection={},this.die=!1,this.eventBus=new a.default,this.checkPersonType(),this.moveInRandomDirection()}return i(e,[{key:"checkPersonType",value:function(){switch(this.type){case"human":this.subscribeToMove(),this.humanLife=!0,this.ateMushroom=!1,this.mushroomTimer=0;break;case"hunt1":this.speed=this.getRandomInt(3,10),this.setRandomPositions();break;case"hunt2":this.SUBJECT_SIZE=this.containerHeight/12,this.speed=this.getRandomInt(5,12),this.setRandomPositions();break;case"mushroom":this.speed=this.getRandomInt(7,14),this.setRandomPositions()}}},{key:"setRandomPositions",value:function(){this.x=this.getRandomInt(0,this.containerWidth),this.y=this.getRandomInt(0,this.containerHeight);this.getResultPythagoreanTheorem()<5*this.SUBJECT_SIZE&&this.setRandomPositions()}},{key:"subscribeToMove",value:function(){var e=this.movePerson.bind(this);document.body.addEventListener("keydown",e);var t=this.moveCharacterOnMobile.bind(this);document.querySelector(".mobileControls").addEventListener("click",t)}},{key:"moveCharacterOnMobile",value:function(e){var t=e.target;this.direction=+t.value,this.updateSprites.direction=+t.value,this.setDirection()}},{key:"movePerson",value:function(e){switch(e.keyCode){case 38:this.direction=1,this.updateSprites.direction=1,this.setDirection();break;case 40:this.direction=2,this.updateSprites.direction=2,this.setDirection();break;case 39:this.direction=3,this.updateSprites.direction=3,this.setDirection();break;case 37:this.direction=4,this.updateSprites.direction=4,this.setDirection()}}},{key:"moveInRandomDirection",value:function(){this.direction=this.getRandomInt(1,4),this.updateSprites=new r.default(this.type,this.direction,this.speed),this.setDirection(),this.startMove()}},{key:"getRandomInt",value:function(e,t){return Math.floor(Math.random()*(t-e+1))+e}},{key:"setDirection",value:function(){switch(this.direction){case 1:this.changeDirection(),this.eventBus.on("move",this.moveForward);break;case 2:this.changeDirection(),this.eventBus.on("move",this.backward);break;case 3:this.changeDirection(),this.eventBus.on("move",this.moveRight);break;case 4:this.changeDirection(),this.eventBus.on("move",this.moveLeft);break;case 5:this.changeDirection(),this.eventBus.on("move",this.moveLeftAndAUp);break;case 6:this.changeDirection(),this.eventBus.on("move",this.moveRightAndAUp);break;case 7:this.changeDirection(),this.eventBus.on("move",this.moveLeftAndDown);break;case 8:this.changeDirection(),this.eventBus.on("move",this.moveRightAndDown)}}},{key:"pursueCharacter",value:function(){this.changeDirection(),this.prey.x>this.x&&this.prey.y>this.y?(this.direction=8,this.updateSprites.direction=8):this.prey.x<this.x&&this.prey.y>this.y?(this.direction=7,this.updateSprites.direction=7):this.prey.x>this.x&&this.prey.y<this.y?(this.direction=6,this.updateSprites.direction=6):this.prey.x<this.x&&this.prey.y<this.y?(this.direction=5,this.updateSprites.direction=5):this.prey.x<this.x?(this.direction=4,this.updateSprites.direction=4):this.prey.x>this.x?(this.direction=3,this.updateSprites.direction=3):this.prey.y>this.y?(this.direction=2,this.updateSprites.direction=2):this.prey.y<this.y&&(this.direction=1,this.updateSprites.direction=1),this.setDirection()}},{key:"moveForward",value:function(e){e.y=e.y-2,e.currentDirection=e.moveForward}},{key:"backward",value:function(e){e.y=e.y+2,e.currentDirection=e.backward}},{key:"moveRight",value:function(e){e.x=e.x+2,e.currentDirection=e.moveRight}},{key:"moveLeft",value:function(e){e.x=e.x-2,e.currentDirection=e.moveLeft}},{key:"moveLeftAndAUp",value:function(e){--e.x,--e.y,e.currentDirection=e.moveLeftAndAUp}},{key:"moveRightAndAUp",value:function(e){++e.x,--e.y,e.currentDirection=e.moveRightAndAUp}},{key:"moveLeftAndDown",value:function(e){--e.x,++e.y,e.currentDirection=e.moveLeftAndDown}},{key:"moveRightAndDown",value:function(e){++e.x,++e.y,e.currentDirection=e.moveRightAndDown}},{key:"getResultPythagoreanTheorem",value:function(){var e=this.prey.x-this.SUBJECT_SIZE/2-(this.x-this.SUBJECT_SIZE/2),t=this.prey.y-this.SUBJECT_SIZE/2-(this.y-this.SUBJECT_SIZE/2);return Math.sqrt(e*e+t*t)}},{key:"checkOutTheEdgeOfTheCharacter",value:function(){this.x<0-this.SUBJECT_SIZE?this.x=this.containerWidth:this.x>this.containerWidth?this.x=0:this.y<0-this.SUBJECT_SIZE?this.y=this.containerHeight:this.y>this.containerHeight&&(this.y=0)}},{key:"changeDirection",value:function(){this.currentDirection.length&&this.eventBus.off("move",this.currentDirection)}},{key:"catchUpWithThePlayer",value:function(){var e=this.getResultPythagoreanTheorem();e<this.SUBJECT_SIZE/1.5&&"mushroom"===this.type&&!this.die?(this.prey.ateMushroom||this.playerCatchMushroom(),this.die=!0,this.prey.ateMushroom=!0,this.prey.mushroomTimer+=15):e<this.SUBJECT_SIZE/1.5&&this.prey.ateMushroom?this.die=!0:e<this.SUBJECT_SIZE/1.5&&!this.die&&(this.prey.humanLife=!1)}},{key:"checkForCharacterOccurrencesInRadius",value:function(){this.getResultPythagoreanTheorem()<2.7*this.SUBJECT_SIZE&&this.pursueCharacter()}},{key:"playerCatchMushroom",value:function(){var e=this,t=setInterval(function(){--e.prey.mushroomTimer,e.prey.mushroomTimer<=0&&(e.prey.ateMushroom=!1,clearInterval(t))},1e3)}},{key:"startMove",value:function(){var e=this,t=setInterval(function(){e.checkOutTheEdgeOfTheCharacter(),"hunt2"===e.type?(e.eventBus.trigger("move",e),e.catchUpWithThePlayer(),e.checkForCharacterOccurrencesInRadius()):(e.eventBus.trigger("move",e),"human"!==e.type&&e.catchUpWithThePlayer()),e.abortInterval(t)},4*this.speed)}},{key:"abortInterval",value:function(e){"hunt2"!==this.type&&"hunt1"!==this.type||this.prey.humanLife?"human"!==this.type||this.humanLife||(clearInterval(e),this.updateSprites.stopUpdateSprites()):(clearInterval(e),this.updateSprites.stopUpdateSprites())}}]),e}();n.default=o},{"../utilities/eventBus":8,"./updatePersonageSprites":7}],5:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i,a=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),r=e("./gameArea"),s=(i=r,i&&i.__esModule?i:{default:i});var o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.playbackArray=JSON.parse(localStorage.players)[t][3],this.playbackGameContainer=document.createElement("div"),this.playbackGameContainer.setAttribute("id","paybackGame"),document.body.appendChild(this.playbackGameContainer),this.playingGame=!0,this.initPlayback()}return a(e,[{key:"initPlayback",value:function(){this.createControls(),this.createPlaybackGameArea(),this.updatePlaybackGameArea()}},{key:"createControls",value:function(){var e=document.querySelector("#controlsDiv");if(e)e.style.display="block";else{this.controlsDiv=document.createElement("div"),this.controlsDiv.setAttribute("id","controlsDiv"),document.body.appendChild(this.controlsDiv);var t=document.createElement("label");t.innerText="Регулятор скорости:",t.setAttribute("id","speedControllerLabel"),this.controlsDiv.appendChild(t),this.speedController=this.createRange(t,"speedController",50),this.speedController.setAttribute("value","25"),this.rewindController=this.createRange(this.controlsDiv,"rewindController",this.playbackArray.length-1),this.createPlayButton(this.controlsDiv),this.subsToChangeControls()}}},{key:"createRange",value:function(e,t,n){var i=document.createElement("input");return i.setAttribute("id",t),i.setAttribute("type","range"),i.setAttribute("value","1"),i.setAttribute("min","1"),i.setAttribute("max",n),e.appendChild(i),i}},{key:"createPlayButton",value:function(){this.playButton=document.createElement("input"),this.playButton.setAttribute("id","playButton"),this.playButton.setAttribute("type","button"),this.playButton.setAttribute("value","stop"),this.controlsDiv.appendChild(this.playButton)}},{key:"subsToChangeControls",value:function(){var e=this.clickOnPlayButton.bind(this);this.playButton=document.querySelector("#playButton"),this.playButton.addEventListener("click",e);var t=this.changeRange.bind(this);this.controlsDiv.addEventListener("change",t)}},{key:"changeRange",value:function(e){var t=e.target;t.closest("#rewindController")?(this.playback.gameStage=+t.value,this.playback.getCurrentPersonageArray(this.playbackArray),this.playback.createCanvasArea()):t.closest("#speedController")&&this.playbackArray.length-1!==this.playback.gameStage&&(this.stopPlaybackGameArea(),this.updatePlaybackGameArea())}},{key:"clickOnPlayButton",value:function(e){var t=e.target;"stop"===t.value?(t.value="play",t.style.backgroundPositionX="0",this.timer&&this.stopPlaybackGameArea()):"play"===t.value&&(t.value="stop",t.style.backgroundPositionX="17%",this.timer||this.updatePlaybackGameArea(),this.playbackArray.length-1===this.playback.gameStage&&(this.rewindController.value=1,this.playback.gameStage=1))}},{key:"createPlaybackGameArea",value:function(){this.playback=new s.default(this.playbackGameContainer,this.playbackArray)}},{key:"updatePlaybackGameArea",value:function(){var e=this;this.timer=setInterval(function(){++e.playback.gameStage,+e.rewindController.value==e.playback.gameStage-1&&(e.rewindController.value=e.playback.gameStage),e.playback.getCurrentPersonageArray(e.playbackArray),e.playback.createCanvasArea(),e.playbackArray.length-1===e.playback.gameStage&&(e.playButton.value="play",e.playButton.style.backgroundPositionX="0",e.stopPlaybackGameArea())},this.speedController.value)}},{key:"stopPlaybackGameArea",value:function(){clearInterval(this.timer),this.timer=0}}]),e}();n.default=o},{"./gameArea":2}],6:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();var a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.tableContain=document.querySelector("#tableContain"),this.createTableTemplate()}return i(e,[{key:"createTableTemplate",value:function(){this.table=document.createElement("table"),this.table.setAttribute("id","records"),this.table.innerHTML="<tr><th>Ник игрока</th><th>Минут</th><th>Секунд</th><th>Воспроизвести записанную игру</th></tr>",localStorage.players&&(this.playersArray=JSON.parse(localStorage.players),this.createTable())}},{key:"createTable",value:function(){for(var e=0;e<this.playersArray.length;++e){for(var t=document.createElement("tr"),n=0;n<this.playersArray[e].length;++n){var i=document.createElement("td");if(n!==this.playersArray[e].length-1)i.innerText=this.playersArray[e][n];else{var a=document.createElement("a");a.setAttribute("class","playRecordedGame"),a.setAttribute("href","#playbackUser="+e),a.innerText="Play",i.appendChild(a)}t.appendChild(i)}this.table.appendChild(t)}this.tableContain.innerHTML="",this.tableContain.appendChild(this.table)}}]),e}();n.default=a},{}],7:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();var a=function(){function e(t,n,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.direction=n,this.speed=i,this.type=t,this.sx=0,this.sy=0,this.initUpdateSprites(),this.startUpdateSprites()}return i(e,[{key:"initUpdateSprites",value:function(){switch(this.type){case"human":this.updateHumanSprite();break;case"hunt1":this.updateHunter1Sprite();break;case"hunt2":this.updateHunter2Sprite();break;case"mushroom":this.updateMushroomSprite()}}},{key:"updateHumanSprite",value:function(){switch(this.direction){case 1:case 5:case 6:this.sy=207;break;case 2:case 7:case 8:this.sy=0;break;case 3:this.sy=138;break;case 4:this.sy=69}this.sx+=64,this.sx>=250&&(this.sx=0)}},{key:"updateHunter1Sprite",value:function(){switch(this.direction){case 1:case 5:case 6:this.sy=145;break;case 2:case 7:case 8:this.sy=0;break;case 3:this.sy=96;break;case 4:this.sy=48}this.sx+=46,this.sx>=130&&(this.sx=0)}},{key:"updateHunter2Sprite",value:function(){switch(this.direction){case 1:case 5:case 6:this.sy=288;break;case 2:case 7:case 8:this.sy=0;break;case 3:this.sy=192;break;case 4:this.sy=96}this.sx+=143,this.sx>=425&&(this.sx=0)}},{key:"updateMushroomSprite",value:function(){switch(this.direction){case 1:case 5:case 6:this.sy=150;break;case 2:case 7:case 8:this.sy=0;break;case 3:this.sy=100;break;case 4:this.sy=50}this.sx+=50,this.sx>=140&&(this.sx=0)}},{key:"startUpdateSprites",value:function(){var e=this;this.timer=setInterval(function(){e.initUpdateSprites()},18*this.speed)}},{key:"stopUpdateSprites",value:function(){clearInterval(this.timer)}}]),e}();n.default=a},{}],8:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();var a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.listeners={}}return i(e,[{key:"on",value:function(e,t){this.listeners[e]=this.listeners[e]||[],this.listeners[e].push(t)}},{key:"trigger",value:function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),i=1;i<t;i++)n[i-1]=arguments[i];this.listeners[e]&&this.listeners[e].forEach(function(e){return e.apply(void 0,n)})}},{key:"off",value:function(e,t){t?this.listeners[e]=this.listeners[e].filter(function(e){return!(t===e)}):delete this.listeners[e]}},{key:"once",value:function(e,t){this.on(e,function(){t.apply(void 0,arguments),delete n.listeners[e]});var n=this}}]),e}();n.default=a},{}],9:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}();var a=function(){function e(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.routes=n.routes,window.addEventListener("hashchange",function(){return t.hashCheck(window.location.hash)}),this.hashCheck(window.location.hash)}return i(e,[{key:"findNewRoute",value:function(e){var t=void 0,n=this;if(this.routes)return 1===this.routes.length?this.findRoute(e,this.routes[0]):(this.routes.forEach(function(i){if(n.findRoute(e,i))return t=i}),t)}},{key:"findRoute",value:function(e,t){if("string"==typeof t.match&&e===t.match||"function"==typeof t.match&&t.match(e)||t.match instanceof RegExp&&e.match(t.match))return t}},{key:"hashCheck",value:function(e){var t=this;e=e.slice(1);var n=this.activeRoute,i=this.findNewRoute(e);i&&("string"==typeof i.match?this.routeParams=i.match:i.match instanceof RegExp?this.routeParams=e.match(i.match)[1]:"function"==typeof i.match&&(this.routeParams=i.match(e)),Promise.resolve().then(function(){n&&n.onLeave&&(t.preRouteParams?n.onLeave(t.preRouteParams):n.onLeave())}).then(function(){i&&i.onBeforeEnter&&(t.routeParams?i.onBeforeEnter(t.routeParams):i.onBeforeEnter())}).then(function(){i&&i.onEnter&&(t.routeParams?i.onEnter(t.routeParams):i.onEnter())}).then(function(){t.activeRoute=i,t.preRouteParams=t.routeParams}).catch(function(e){console.log(e)}))}}]),e}();n.default=a},{}]},{},[3]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
